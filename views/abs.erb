<script src="/js/leaflet.js"></script>
<script src="/js/maptimog.js"></script>
<script src="/js/knockout-min.js"></script>
<link rel="stylesheet" href="/css/leaflet.css" />
<link rel="stylesheet" href="/css/table.css" />

<style>
      #map {
      float: right;
      width: 85%;
      height: 600px;
    }   
    .info {
      padding: 6px 8px;
      font: 14px/16px Arial, Helvetica, sans-serif;
      background: white;
      background: rgba(255,255,255,0.8);
      box-shadow: 0 0 15px rgba(0,0,0,0.2);
      border-radius: 5px;
    }
    .info h4 {
      margin: 0 0 5px;
      color: #777;
    }
    .legend {
      text-align: left;
      line-height: 18px;
      color: #555;
    }
    .legend i {
      width: 18px;
      height: 18px;
      float: left;
      margin-right: 8px;
      opacity: 0.7;
    }
</style>  

<br>
<div style="float:left">
	<div style="float:right">
		<img src="/img/orgs/ABSCBN.png" width="100">
	</div>
<h1>ABS-CBN</h1>
<i>"In the Service of the Filipino Worldwide"</i>
<ul>
<li>Sgt. E.A. Esguerra Ave. corner Mother Ignacia Street
Quezon City, Philippines</li>
<li>415-2272</li>
<li>web_feedback@abs-cbn.com</li>
</ul>
</div>

<div id="map" style="width: 50%; height: 250px; float:right; top:10px" ></div>
<div style="clear: both"></div>

<br>
<div class="CSSTableGenerator" style="float:left; margin: 0 10 0 10">
<h2>Products & Services Supplied</h2>
<form action='/someServerSideHandler'>
    <p>Your company has <span data-bind='text: gifts().length'>&nbsp;</span> SKU(s)</p>
    <table data-bind='visible: gifts().length > 0'>
        <thead>
                <td>SKU name</td>
                <td>Quantity</td>
                <td>Details</td>
                <td>Action</td>
        </thead>
        <tbody data-bind='foreach: gifts'>
            <tr>
                <td><input size="15" class='required' data-bind='value: name, uniqueName: true' /></td>
                <td><input size="5" class='required number' data-bind='value: price, uniqueName: true' /></td>
                <td><input size="10" class='required' data-bind='value: company, uniqueName: true' /></td>
                <td><a href='#' data-bind='click: $root.removeGift'>Delete</a></td>
            </tr>
        </tbody>
    </table>
    <button data-bind='click: addGift'>Add SKU</button>
    <!--<button data-bind='enable: gifts().length > 0' type='submit'>Submit</button>-->
</form>
</div>

<div class="CSSTableGenerator" style="float:left; margin: 0 10 0 10">
<h2>Products & Services Needed</h2>
<form>
    <p>Your company wants X SKU(s)</p>
    <table>
            <thead>
                <td>SKU name</td>
                <td>Quantity</td>
                <td>Details</td>
                <td/>Action<td/>
            </thead>
        <tbody>
            <tr>
                <td>fried_chicken</td>
                <td>100 per day</td>
                <td>any</td>
            </tr>
            <tr>
                <td>hamburgers</td>
                <td>100 per day</td>
                <td>patty should be x grams</td>
            </tr>
        </tbody>
    </table>
    <button onclick="alert('Sorry, Feature not ready yet');">Add SKU</button>
</form>
</div>

<div class="CSSTableGenerator" style="float:left; margin: 0 10 0 10">
<h2>Trades Status</h2>
<form>  
    <p>Your company has X Trade(s)</p>
    <table>
        <thead>
            <td>Date</td>
            <td>Related SKU(s) </td>
            <td>Related Company(ies)</td>
            <td>Action</td>
        </thead>
        <tbody>
            <tr>
                <td>01-01-2014</td>
                <td><a href='#'>advertising_radio for fried_chicken</a></td>
                <td><a href="/kfc">KFC</a></td>
            </tr>
            <tr>
                <td>01-02-2014</td>
                <td><a href='#'>advertising_radio for fried_chicken</a></td>
                <td><a href='/kfc'>KFC</a></td>
            </tr>
        </tbody>
    </table>
    <button onclick="alert('Sorry, feature not ready yet');">Add A Trade</button>
</form>
</div>

<script>
var SKUModel = function(gifts) {
    var self = this;
    self.gifts = ko.observableArray(gifts);
 
    self.addGift = function() {
        self.gifts.push({
            name: "",
            price: "",
            company: "",
        });
    };
 
    self.removeGift = function(gift) {
        self.gifts.remove(gift);
    };
 
    self.save = function(form) {
        alert("Could now transmit to server: " + ko.utils.stringifyJson(self.gifts));
        // To actually transmit to server as a regular form post, write this: ko.utils.postJson($("form")[0], self.gifts);
    };
};
 
var viewModel = new SKUModel([
    { name: "broadcasting_tv", price: "100", company: "more info" },
    { name: "broadcasting_radio", price: "100", company: "more info" },
    { name: "advertising_tv", price: "100", company: "regular hours only" },
    { name: "advertising_radio", price: "100", company: "regular hours only" }
]);
ko.applyBindings(viewModel);


// var NeedModel = function(needs) {
//     var self = this;
//     self.needs = ko.observableArray(needs);
 
//     self.addNeed = function() {
//         self.needs.push({
//             name: "",
//             price: "",
//             company: "",
//         });
//     };
 
//     self.removeNeed = function(need) {
//         self.needs.remove(need);
//     };
 
//     self.save = function(form) {
//         alert("Could now transmit to server: " + ko.utils.stringifyJson(self.needs));
//         // To actually transmit to server as a regular form post, write this: ko.utils.postJson($("form")[0], self.gifts);
//     };
// };
 
// var needsModel = new NeedModel([
//     { name: "broadcasting_tv", price: "100", company: "ABSCBN" },
//     { name: "broadcasting_radio", price: "100", company: "ABSCBN" },
//     { name: "advertising_tv", price: "100", company: "ABSCBN" },
//     { name: "advertising_radio", price: "100", company: "ABSCBN" }
// ]);
// ko.applyBindings(needsModel);

 
// // Activate jQuery Validation
// $("form").validate({ submitHandler: viewModel.save });
</script>




	<script type="text/javascript">
	var map = L.map('map').setView(new L.LatLng(14.639506, 121.036798),17);
	//		var map = L.map('map').setView([37.8, -96], 4);

		var osm = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
		    attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a>'
		}).addTo(map);
		
		// control that shows state info on hover
		var info = L.control();

		info.onAdd = function (map) {
			this._div = L.DomUtil.create('div', 'info');
			this.update();
			return this._div;
		};


		info.update = function (props) {
			this._div.innerHTML =  (props ?
				'<b>' + props.name + '</b><br />' + '<h3>needs</h3>' + 
				props.demands + '<br/>' + '<h3>supplies</h3>' + props.supplies	+ 
				'<br />' + '<h3>contact</h3>' + props.contact
				: 'Hover over a location');
		};
		info.addTo(map);

		// get color depending on population density value
		function getColor(d) {
			return d > 1000 ? '#00ff00' :
			       d > 500  ? '#BD0026' :
			       d > 200  ? '#E31A1C' :
			                  '#0000ff';
		}

		function style(feature) {
			return {
				weight: 2,
				opacity: 1,
				color: 'white',
				dashArray: '3',
				fillOpacity: 0.2,
				fillColor: getColor(feature.properties.density)
			};
		}

		function highlightFeature(e) {
			var layer = e.target;

			layer.setStyle({
				weight: 5,
				color: '#666',
				dashArray: '',
				fillOpacity: 0.7
			});

			if (!L.Browser.ie && !L.Browser.opera) {
				layer.bringToFront();
			}

			info.update(layer.feature.properties);
		}

		var geojson;

		function resetHighlight(e) {
			geojson.resetStyle(e.target);
			info.update();
		}

		function zoomToFeature(e) {
			map.fitBounds(e.target.getBounds());
		}

		function onEachFeature(feature, layer) {
			layer.on({
				mouseover: highlightFeature,
				mouseout: resetHighlight,
				click: zoomToFeature
			});
		}

		geojson = L.geoJson(statesData, {
			style: style,
			onEachFeature: onEachFeature
		}).addTo(map);

		var legend = L.control({position: 'bottomright'});

		legend.onAdd = function (map) {
			
			var div = L.DomUtil.create('div', 'info legend'),
				grades = [0, 10, 20, 50],
				labels = [],
				from, to;

			for (var i = 0; i < grades.length; i++) {
				from = grades[i];
				to = grades[i + 1];

				labels.push(
					'<i style="background:' + getColor(from + 1) + '"></i> ' +
					from + (to ? '&ndash;' + to : '+'));
				}

			// div.innerHTML = 'Need Indicator<br>' + labels.join('<br>');
			// return div;
		};

		legend.addTo(map);
	</script>