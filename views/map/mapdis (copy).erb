<link rel="stylesheet" href="/css/leaflet.css" />
<script src="/js/world.js"></script>
<script src="/js/leaflet.js"></script> 

<script src='https://api.tiles.mapbox.com/mapbox.js/v2.1.9/mapbox.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox.js/v2.1.9/mapbox.css' rel='stylesheet' />

<title>Global Disaster Map</title>
<br><br>
<div id="map" style="width: 100%; height: 95%"></div>

<section id="bottomright" role="complementary">
    <p>Adam Smith's system of resource allocation also deals with <b><a href="http://www.csmonitor.com/2005/0118/p09s02-coop.html" target="_blank">Disaster relief</a></b>. The main difference between trade and disaster relief is that the latter does not give anything back, though the contracts and logistics may be the same.</p><hr>

<p>This sample newsfeed gives real-time updates</p>

  <div class="avatararea">
    <div class="avatarheader">
      <div class="avatar"><img src="http://www.redcross.int/EN/common/IMAGES/home/icrc_logo.gif" height="42" width="42">
      </div>
        <a href="#"><b>Red Cross</a>:<a href="#"> Updated Relief Zones</b></a><br>
        <small>1 hour ago</small>
    </div>
    <li>Nepal</li>
    <li>India</li>
    <li>Tibet</li>
    <a href="#"><small>see more</small></a><br><br>
    <small><a href="#">Promote</a> - <a href="#">Comment</a> - <a href="#">Share</a></small>
  </div>
  <br>
</section>

<script type="text/javascript">
L.mapbox.accessToken = 'pk.eyJ1IjoianVuZGFsaXNheSIsImEiOiI4SExFRGZzIn0.HqmE2skQkKkhqfMnUDT1Qg';

    var map = L.map('map', 'jundalisay.m1n03p4e').setView([17, 78], 3);

    L.tileLayer('https://{s}.tiles.mapbox.com/v3/{id}/{z}/{x}/{y}.png', {
      maxZoom: 18,
      id: 'jundalisay.m1n03p4e'
    }).addTo(map);

    function onEachFeature(feature, layer) {
      var popupContent = feature.properties.name + "<br>" ; 
      if (feature.properties && feature.properties.popupContent) {
        popupContent += feature.properties.popupContent;
      }

      layer.bindPopup(popupContent);
    }

    L.geoJson([nepal, india, ph], {

      style: function (feature) {
        return feature.properties && feature.properties.style;
      },
      onEachFeature: onEachFeature,
    }).addTo(map);
</script>